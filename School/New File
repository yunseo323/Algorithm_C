/*
10
3 81 9 12 0 –9 36 33 91 10
3
3 7 4 5 0 4
*/

#include <stdio.h>

void switchArr(int *arr, int a, int b);

int main() {
	int N, num, cnt = 0, i;
	int a, b; //뒤집기 구간 정보
	int x[100] = { 0 };

	scanf("%d", &N);
	for (i = 0; i < N; i++) {
		scanf("%d", &x[i]);
	}
	scanf("%d", &num);

	while (1) {
		if (cnt == num) break;
		scanf("%d %d", &a, &b);
		switchArr(x, a, b);
		cnt++;
	}

	for (i = 0; i < N; i++) {
		printf(" %d", x[i]);
	}
	return 0;
}

void switchArr(int *arr, int a, int b) {
	int i, j = 0;
	int tmp[100] = { 0 };
	for (i = a; i <= b; i++) {
		tmp[j] = arr[i];
		j++;
	}
	j = 0;
	for (i = b; i >= a; i--) {
		arr[i] = tmp[j];
		j++;
	}
}
/////
/*
10
3 81 9 12 0 –9 36 33 91 10
5
3 8 0 9 3
*/

#include <stdio.h>

void switchArr(int *arr, int *index, int num);

int main() {
	int N, num, cnt = 0, i = 0;
	int index[100]; //뒤집기 순서
	int x[100] = { 0 };

	scanf("%d", &N);
	for (i = 0; i < N; i++) {
		scanf("%d", &x[i]);
	}
	scanf("%d", &num);

	for (i = 0; i < num; i++) {
		scanf("%d", &index[i]);
	}
	switchArr(x, index, num);
	for (i = 0; i < N; i++) {
		printf(" %d", x[i]);
	}
	return 0;
}


void switchArr(int *arr, int *index, int num) {
	int tmp;
	int i;
	tmp = arr[index[0]];
	for (i = num - 1; i > 0; i--) {
		arr[index[i]] = arr[index[i - 1]];
	}
	arr[index[1]] = tmp;
}
//////////

int main() {
	int N;
	int i, j, cnt = 1;
	int arr[100][100] = { 0 };
	scanf("%d", &N);

	for (i = 0; i < N; i++) {
		if (i % 2 == 0) {
			for (j = 0; j < N; j++) {
				arr[i][j] = cnt;
				cnt++;
			}
		}
		else {
			for (j = N -1; j >= 0; j--) {
				arr[i][j] = cnt;
				cnt++;
			}
		}
	}

	//출력
	for (i = 0; i < N; i++) {
		for (j = 0; j < N; j++) {
			printf(" %d", arr[i][j]);
		}
		printf("\n");
	}

	return 0;
}

///////

int main() {
	int arr[100][100] = { 0 };
	int N, M, Nnum, Mnum;
	int i,j, d = 1;
	int x = 0, y = -1;
	int num = 1;

	//입력
	scanf("%d %d", &N, &M); //행, 열
	Nnum = N;
	Mnum = M;

	//알고리즘 구현
	while (num <= N*M) {
		for (i = 0; i < Mnum; i++) {
			y += d;
			arr[x][y] = num;
			num++;
		}
		for (i = 0; i < Nnum - 1; i++) {
			x += d;
			arr[x][y] = num;
			num++;
		}

		Nnum--;
		Mnum--;
		d *= -1;
	}

	//출력
	for (i = 0; i < N; i++) {
		for (j = 0; j < M; j++) {
			printf(" %d", arr[i][j]);
		}
		printf("\n");
	}

	return 0;
}


int main() {
	int arr[100][100] = { 0 };
	int N, M;
	int i = 0, j = 0, r = 0;
	int num = 0;
	int count = 0;

	scanf("%d %d", &N, &M);
	count = N < M ? M * 2 - 1 : (N -1) * 2;
	for (r = 0; r <= count; r++) { //반복 횟수(대각선)
		for (i = 0; i < N; i++) {
			j = r - i;
			if (0 <= j && j < M) {
				num++ ;
				arr[i][j] = num;
			}
		}
	}

	//출력
	for (i = 0; i < N; i++) {
		for (j = 0; j < M; j++) {
			printf(" %d", arr[i][j]);
		}
		printf("\n");
	}

	return 0;
}
